Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER RETURNS type ';'
    4                | error ';'

    5 optional_variable: optional_variable variable
    6                  | error ';'
    7                  | %empty

    8 variable: IDENTIFIER ':' type IS statement_with_handle_error

    9 parameters: parameter optional_parameter

   10 optional_parameter: optional_parameter ',' parameter
   11                   | %empty

   12 parameter: IDENTIFIER ':' type

   13 type: INTEGER
   14     | BOOLEAN
   15     | REAL

   16 body: BEGIN_ statement_with_handle_error END ';'

   17 statement_with_handle_error: statement
   18                            | error

   19 statement: expression ';'
   20          | REDUCE operator reductions ENDREDUCE ';'
   21          | IF expression THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF ';'
   22          | CASE expression IS cases OTHERS ARROW statement_with_handle_error ENDCASE ';'

   23 cases: cases case
   24      | %empty

   25 case: WHEN INT_LITERAL ARROW statement_with_handle_error

   26 operator: ADDOP
   27         | MULOP

   28 reductions: reductions statement_with_handle_error
   29           | %empty

   30 expression: expression OROP binary
   31           | binary

   32 relation: relation RELOP term
   33         | term

   34 binary: binary ANDOP relation
   35       | relation

   36 term: term ADDOP factor
   37     | factor

   38 factor: factor MULOP exponent
   39       | factor REMOP exponent
   40       | exponent

   41 exponent: unary
   42         | unary EXPOP exponent

   43 unary: NOTOP unary
   44      | primary

   45 primary: '(' expression ')'
   46        | INT_LITERAL
   47        | REAL_LITERAL
   48        | BOOL_LITERAL
   49        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 45
    ')' (41) 45
    ',' (44) 10
    ':' (58) 8 12
    ';' (59) 2 3 4 6 16 19 20 21 22
    error (256) 4 6 18
    IDENTIFIER <iden> (258) 2 3 8 12 49
    INT_LITERAL <value> (259) 25 46
    REAL_LITERAL <value> (260) 47
    BOOL_LITERAL <value> (261) 48
    CASE <value> (262) 22
    WHEN <value> (263) 25
    ADDOP <oper> (264) 26 36
    MULOP <oper> (265) 27 38
    RELOP <oper> (266) 32
    REMOP <oper> (267) 39
    EXPOP <oper> (268) 42
    OROP (269) 30
    ANDOP (270) 34
    NOTOP (271) 43
    BEGIN_ (272) 16
    BOOLEAN (273) 14
    END (274) 16
    ENDREDUCE (275) 20
    FUNCTION (276) 2 3
    INTEGER (277) 13
    IS (278) 8 22
    REDUCE (279) 20
    RETURNS (280) 2 3
    REAL (281) 15
    IF (282) 21
    THEN (283) 21
    ELSE (284) 21
    ENDIF (285) 21
    OTHERS (286) 22
    ARROW (287) 22 25
    ENDCASE (288) 22


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3 4
        on right: 1
    optional_variable (42)
        on left: 5 6 7
        on right: 1 5
    variable (43)
        on left: 8
        on right: 5
    parameters (44)
        on left: 9
        on right: 2
    optional_parameter (45)
        on left: 10 11
        on right: 9 10
    parameter (46)
        on left: 12
        on right: 9 10
    type (47)
        on left: 13 14 15
        on right: 2 3 8 12
    body <value> (48)
        on left: 16
        on right: 1
    statement_with_handle_error <value> (49)
        on left: 17 18
        on right: 8 16 21 22 25 28
    statement <value> (50)
        on left: 19 20 21 22
        on right: 17
    cases <value> (51)
        on left: 23 24
        on right: 22 23
    case <value> (52)
        on left: 25
        on right: 23
    operator <oper> (53)
        on left: 26 27
        on right: 20
    reductions <value> (54)
        on left: 28 29
        on right: 20 28
    expression <value> (55)
        on left: 30 31
        on right: 19 21 22 30 45
    relation <value> (56)
        on left: 32 33
        on right: 32 34 35
    binary <value> (57)
        on left: 34 35
        on right: 30 31 34
    term <value> (58)
        on left: 36 37
        on right: 32 33 36
    factor <value> (59)
        on left: 38 39 40
        on right: 36 37 38 39
    exponent <value> (60)
        on left: 41 42
        on right: 38 39 40 42
    unary <value> (61)
        on left: 43 44
        on right: 41 42 43
    primary <value> (62)
        on left: 45 46 47 48 49
        on right: 44


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    4 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION . IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    error  shift, and go to state 8

    IDENTIFIER  reduce using rule 7 (optional_variable)
    BEGIN_      reduce using rule 7 (optional_variable)

    optional_variable  go to state 9


State 5

    4 function_header: error ';' .

    $default  reduce using rule 4 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER . RETURNS type ';'

    IDENTIFIER  shift, and go to state 10
    RETURNS     shift, and go to state 11

    parameters  go to state 12
    parameter   go to state 13


State 7

    0 $accept: function $end .

    $default  accept


State 8

    6 optional_variable: error . ';'

    ';'  shift, and go to state 14


State 9

    1 function: function_header optional_variable . body
    5 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 15
    BEGIN_      shift, and go to state 16

    variable  go to state 17
    body      go to state 18


State 10

   12 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 19


State 11

    3 function_header: FUNCTION IDENTIFIER RETURNS . type ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 23


State 12

    2 function_header: FUNCTION IDENTIFIER parameters . RETURNS type ';'

    RETURNS  shift, and go to state 24


State 13

    9 parameters: parameter . optional_parameter

    $default  reduce using rule 11 (optional_parameter)

    optional_parameter  go to state 25


State 14

    6 optional_variable: error ';' .

    $default  reduce using rule 6 (optional_variable)


State 15

    8 variable: IDENTIFIER . ':' type IS statement_with_handle_error

    ':'  shift, and go to state 26


State 16

   16 body: BEGIN_ . statement_with_handle_error END ';'

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    CASE          shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 37
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 17

    5 optional_variable: optional_variable variable .

    $default  reduce using rule 5 (optional_variable)


State 18

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 19

   12 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 47


State 20

   14 type: BOOLEAN .

    $default  reduce using rule 14 (type)


State 21

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


State 22

   15 type: REAL .

    $default  reduce using rule 15 (type)


State 23

    3 function_header: FUNCTION IDENTIFIER RETURNS type . ';'

    ';'  shift, and go to state 48


State 24

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 49


State 25

    9 parameters: parameter optional_parameter .
   10 optional_parameter: optional_parameter . ',' parameter

    ','  shift, and go to state 50

    $default  reduce using rule 9 (parameters)


State 26

    8 variable: IDENTIFIER ':' . type IS statement_with_handle_error

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 51


State 27

   18 statement_with_handle_error: error .

    $default  reduce using rule 18 (statement_with_handle_error)


State 28

   49 primary: IDENTIFIER .

    $default  reduce using rule 49 (primary)


State 29

   46 primary: INT_LITERAL .

    $default  reduce using rule 46 (primary)


State 30

   47 primary: REAL_LITERAL .

    $default  reduce using rule 47 (primary)


State 31

   48 primary: BOOL_LITERAL .

    $default  reduce using rule 48 (primary)


State 32

   22 statement: CASE . expression IS cases OTHERS ARROW statement_with_handle_error ENDCASE ';'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    expression  go to state 52
    relation    go to state 40
    binary      go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 33

   43 unary: NOTOP . unary

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    unary    go to state 53
    primary  go to state 46


State 34

   20 statement: REDUCE . operator reductions ENDREDUCE ';'

    ADDOP  shift, and go to state 54
    MULOP  shift, and go to state 55

    operator  go to state 56


State 35

   21 statement: IF . expression THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF ';'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    expression  go to state 57
    relation    go to state 40
    binary      go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 36

   45 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    expression  go to state 58
    relation    go to state 40
    binary      go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 37

   16 body: BEGIN_ statement_with_handle_error . END ';'

    END  shift, and go to state 59


State 38

   17 statement_with_handle_error: statement .

    $default  reduce using rule 17 (statement_with_handle_error)


State 39

   19 statement: expression . ';'
   30 expression: expression . OROP binary

    OROP  shift, and go to state 60
    ';'   shift, and go to state 61


State 40

   32 relation: relation . RELOP term
   35 binary: relation .

    RELOP  shift, and go to state 62

    $default  reduce using rule 35 (binary)


State 41

   31 expression: binary .
   34 binary: binary . ANDOP relation

    ANDOP  shift, and go to state 63

    $default  reduce using rule 31 (expression)


State 42

   33 relation: term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 64

    $default  reduce using rule 33 (relation)


State 43

   37 term: factor .
   38 factor: factor . MULOP exponent
   39       | factor . REMOP exponent

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66

    $default  reduce using rule 37 (term)


State 44

   40 factor: exponent .

    $default  reduce using rule 40 (factor)


State 45

   41 exponent: unary .
   42         | unary . EXPOP exponent

    EXPOP  shift, and go to state 67

    $default  reduce using rule 41 (exponent)


State 46

   44 unary: primary .

    $default  reduce using rule 44 (unary)


State 47

   12 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 12 (parameter)


State 48

    3 function_header: FUNCTION IDENTIFIER RETURNS type ';' .

    $default  reduce using rule 3 (function_header)


State 49

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type . ';'

    ';'  shift, and go to state 68


State 50

   10 optional_parameter: optional_parameter ',' . parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 69


State 51

    8 variable: IDENTIFIER ':' type . IS statement_with_handle_error

    IS  shift, and go to state 70


State 52

   22 statement: CASE expression . IS cases OTHERS ARROW statement_with_handle_error ENDCASE ';'
   30 expression: expression . OROP binary

    OROP  shift, and go to state 60
    IS    shift, and go to state 71


State 53

   43 unary: NOTOP unary .

    $default  reduce using rule 43 (unary)


State 54

   26 operator: ADDOP .

    $default  reduce using rule 26 (operator)


State 55

   27 operator: MULOP .

    $default  reduce using rule 27 (operator)


State 56

   20 statement: REDUCE operator . reductions ENDREDUCE ';'

    $default  reduce using rule 29 (reductions)

    reductions  go to state 72


State 57

   21 statement: IF expression . THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF ';'
   30 expression: expression . OROP binary

    OROP  shift, and go to state 60
    THEN  shift, and go to state 73


State 58

   30 expression: expression . OROP binary
   45 primary: '(' expression . ')'

    OROP  shift, and go to state 60
    ')'   shift, and go to state 74


State 59

   16 body: BEGIN_ statement_with_handle_error END . ';'

    ';'  shift, and go to state 75


State 60

   30 expression: expression OROP . binary

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    relation  go to state 40
    binary    go to state 76
    term      go to state 42
    factor    go to state 43
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 61

   19 statement: expression ';' .

    $default  reduce using rule 19 (statement)


State 62

   32 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    term      go to state 77
    factor    go to state 43
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 63

   34 binary: binary ANDOP . relation

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    relation  go to state 78
    term      go to state 42
    factor    go to state 43
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 64

   36 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    factor    go to state 79
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 65

   38 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    exponent  go to state 80
    unary     go to state 45
    primary   go to state 46


State 66

   39 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    exponent  go to state 81
    unary     go to state 45
    primary   go to state 46


State 67

   42 exponent: unary EXPOP . exponent

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 36

    exponent  go to state 82
    unary     go to state 45
    primary   go to state 46


State 68

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 69

   10 optional_parameter: optional_parameter ',' parameter .

    $default  reduce using rule 10 (optional_parameter)


State 70

    8 variable: IDENTIFIER ':' type IS . statement_with_handle_error

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    CASE          shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 83
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 71

   22 statement: CASE expression IS . cases OTHERS ARROW statement_with_handle_error ENDCASE ';'

    $default  reduce using rule 24 (cases)

    cases  go to state 84


State 72

   20 statement: REDUCE operator reductions . ENDREDUCE ';'
   28 reductions: reductions . statement_with_handle_error

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    CASE          shift, and go to state 32
    NOTOP         shift, and go to state 33
    ENDREDUCE     shift, and go to state 85
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 86
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 73

   21 statement: IF expression THEN . statement_with_handle_error ELSE statement_with_handle_error ENDIF ';'

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    CASE          shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 87
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 74

   45 primary: '(' expression ')' .

    $default  reduce using rule 45 (primary)


State 75

   16 body: BEGIN_ statement_with_handle_error END ';' .

    $default  reduce using rule 16 (body)


State 76

   30 expression: expression OROP binary .
   34 binary: binary . ANDOP relation

    ANDOP  shift, and go to state 63

    $default  reduce using rule 30 (expression)


State 77

   32 relation: relation RELOP term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 64

    $default  reduce using rule 32 (relation)


State 78

   32 relation: relation . RELOP term
   34 binary: binary ANDOP relation .

    RELOP  shift, and go to state 62

    $default  reduce using rule 34 (binary)


State 79

   36 term: term ADDOP factor .
   38 factor: factor . MULOP exponent
   39       | factor . REMOP exponent

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66

    $default  reduce using rule 36 (term)


State 80

   38 factor: factor MULOP exponent .

    $default  reduce using rule 38 (factor)


State 81

   39 factor: factor REMOP exponent .

    $default  reduce using rule 39 (factor)


State 82

   42 exponent: unary EXPOP exponent .

    $default  reduce using rule 42 (exponent)


State 83

    8 variable: IDENTIFIER ':' type IS statement_with_handle_error .

    $default  reduce using rule 8 (variable)


State 84

   22 statement: CASE expression IS cases . OTHERS ARROW statement_with_handle_error ENDCASE ';'
   23 cases: cases . case

    WHEN    shift, and go to state 88
    OTHERS  shift, and go to state 89

    case  go to state 90


State 85

   20 statement: REDUCE operator reductions ENDREDUCE . ';'

    ';'  shift, and go to state 91


State 86

   28 reductions: reductions statement_with_handle_error .

    $default  reduce using rule 28 (reductions)


State 87

   21 statement: IF expression THEN statement_with_handle_error . ELSE statement_with_handle_error ENDIF ';'

    ELSE  shift, and go to state 92


State 88

   25 case: WHEN . INT_LITERAL ARROW statement_with_handle_error

    INT_LITERAL  shift, and go to state 93


State 89

   22 statement: CASE expression IS cases OTHERS . ARROW statement_with_handle_error ENDCASE ';'

    ARROW  shift, and go to state 94


State 90

   23 cases: cases case .

    $default  reduce using rule 23 (cases)


State 91

   20 statement: REDUCE operator reductions ENDREDUCE ';' .

    $default  reduce using rule 20 (statement)


State 92

   21 statement: IF expression THEN statement_with_handle_error ELSE . statement_with_handle_error ENDIF ';'

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    CASE          shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 95
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 93

   25 case: WHEN INT_LITERAL . ARROW statement_with_handle_error

    ARROW  shift, and go to state 96


State 94

   22 statement: CASE expression IS cases OTHERS ARROW . statement_with_handle_error ENDCASE ';'

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    CASE          shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 97
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 95

   21 statement: IF expression THEN statement_with_handle_error ELSE statement_with_handle_error . ENDIF ';'

    ENDIF  shift, and go to state 98


State 96

   25 case: WHEN INT_LITERAL ARROW . statement_with_handle_error

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    CASE          shift, and go to state 32
    NOTOP         shift, and go to state 33
    REDUCE        shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 99
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 97

   22 statement: CASE expression IS cases OTHERS ARROW statement_with_handle_error . ENDCASE ';'

    ENDCASE  shift, and go to state 100


State 98

   21 statement: IF expression THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF . ';'

    ';'  shift, and go to state 101


State 99

   25 case: WHEN INT_LITERAL ARROW statement_with_handle_error .

    $default  reduce using rule 25 (case)


State 100

   22 statement: CASE expression IS cases OTHERS ARROW statement_with_handle_error ENDCASE . ';'

    ';'  shift, and go to state 102


State 101

   21 statement: IF expression THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF ';' .

    $default  reduce using rule 21 (statement)


State 102

   22 statement: CASE expression IS cases OTHERS ARROW statement_with_handle_error ENDCASE ';' .

    $default  reduce using rule 22 (statement)
