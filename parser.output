Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER RETURNS type ';'
    4                | error ';'

    5 optional_variable: optional_variable variable
    6                  | error ';'
    7                  | %empty

    8 variable: IDENTIFIER ':' type IS statement_with_handle_error

    9 parameters: parameter optional_parameter

   10 optional_parameter: optional_parameter ',' parameter
   11                   | %empty

   12 parameter: IDENTIFIER ':' type

   13 type: INTEGER
   14     | REAL
   15     | BOOLEAN

   16 body: BEGIN_ statement_with_handle_error END ';'

   17 statement_with_handle_error: statement
   18                            | error

   19 statement: expression ';'
   20          | REDUCE operator reductions ENDREDUCE ';'
   21          | IF expression THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF ';'
   22          | CASE expression IS case_block case_others ENDCASE ';'

   23 case_block: case_block case_when
   24           | case_when
   25           | error

   26 case_when: WHEN INT_LITERAL ARROW statement

   27 case_others: OTHERS ARROW expression ';'

   28 operator: ADDOP
   29         | MULOP

   30 reductions: reductions statement_with_handle_error
   31           | %empty

   32 expression: binary
   33           | expression OROP binary

   34 relation: relation RELOP term
   35         | term

   36 binary: binary ANDOP relation
   37       | relation

   38 term: term ADDOP factor
   39     | factor

   40 factor: factor MULOP exponent
   41       | factor REMOP exponent
   42       | exponent

   43 exponent: unary
   44         | unary EXPOP exponent

   45 unary: primary
   46      | NOTOP unary

   47 primary: '(' expression ')'
   48        | INT_LITERAL
   49        | REAL_LITERAL
   50        | BOOL_LITERAL
   51        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 47
    ')' (41) 47
    ',' (44) 10
    ':' (58) 8 12
    ';' (59) 2 3 4 6 16 19 20 21 22 27
    error (256) 4 6 18 25
    IDENTIFIER <iden> (258) 2 3 8 12 51
    INT_LITERAL <type> (259) 26 48
    REAL_LITERAL <type> (260) 49
    BOOL_LITERAL <type> (261) 50
    ADDOP (262) 28 38
    MULOP (263) 29 40
    RELOP (264) 34
    ANDOP (265) 36
    EXPOP (266) 44
    OROP (267) 33
    NOTOP (268) 46
    REMOP (269) 41
    ARROW (270) 26 27
    THEN (271) 21
    WHEN (272) 26
    BEGIN_ (273) 16
    BOOLEAN (274) 15
    END (275) 16
    ENDREDUCE (276) 20
    FUNCTION (277) 2 3
    INTEGER (278) 13
    IS (279) 8 22
    REDUCE (280) 20
    RETURNS (281) 2 3
    CASE (282) 22
    ELSE (283) 21
    ENDCASE (284) 22
    ENDIF (285) 21
    IF (286) 21
    OTHERS (287) 27
    REAL (288) 14


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3 4
        on right: 1
    optional_variable (42)
        on left: 5 6 7
        on right: 1 5
    variable (43)
        on left: 8
        on right: 5
    parameters (44)
        on left: 9
        on right: 2
    optional_parameter (45)
        on left: 10 11
        on right: 9 10
    parameter (46)
        on left: 12
        on right: 9 10
    type <type> (47)
        on left: 13 14 15
        on right: 2 3 8 12
    body (48)
        on left: 16
        on right: 1
    statement_with_handle_error <type> (49)
        on left: 17 18
        on right: 8 16 21 30
    statement <type> (50)
        on left: 19 20 21 22
        on right: 17 26
    case_block (51)
        on left: 23 24 25
        on right: 22 23
    case_when (52)
        on left: 26
        on right: 23 24
    case_others (53)
        on left: 27
        on right: 22
    operator (54)
        on left: 28 29
        on right: 20
    reductions <type> (55)
        on left: 30 31
        on right: 20 30
    expression <type> (56)
        on left: 32 33
        on right: 19 21 22 27 33 47
    relation <type> (57)
        on left: 34 35
        on right: 34 36 37
    binary <type> (58)
        on left: 36 37
        on right: 32 33 36
    term <type> (59)
        on left: 38 39
        on right: 34 35 38
    factor <type> (60)
        on left: 40 41 42
        on right: 38 39 40 41
    exponent <type> (61)
        on left: 43 44
        on right: 40 41 42 44
    unary <type> (62)
        on left: 45 46
        on right: 43 44 46
    primary <type> (63)
        on left: 47 48 49 50 51
        on right: 45


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    4 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER parameters RETURNS type ';'
    3                | FUNCTION . IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    error  shift, and go to state 8

    IDENTIFIER  reduce using rule 7 (optional_variable)
    BEGIN_      reduce using rule 7 (optional_variable)

    optional_variable  go to state 9


State 5

    4 function_header: error ';' .

    $default  reduce using rule 4 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . parameters RETURNS type ';'
    3                | FUNCTION IDENTIFIER . RETURNS type ';'

    IDENTIFIER  shift, and go to state 10
    RETURNS     shift, and go to state 11

    parameters  go to state 12
    parameter   go to state 13


State 7

    0 $accept: function $end .

    $default  accept


State 8

    6 optional_variable: error . ';'

    ';'  shift, and go to state 14


State 9

    1 function: function_header optional_variable . body
    5 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 15
    BEGIN_      shift, and go to state 16

    variable  go to state 17
    body      go to state 18


State 10

   12 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 19


State 11

    3 function_header: FUNCTION IDENTIFIER RETURNS . type ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 23


State 12

    2 function_header: FUNCTION IDENTIFIER parameters . RETURNS type ';'

    RETURNS  shift, and go to state 24


State 13

    9 parameters: parameter . optional_parameter

    $default  reduce using rule 11 (optional_parameter)

    optional_parameter  go to state 25


State 14

    6 optional_variable: error ';' .

    $default  reduce using rule 6 (optional_variable)


State 15

    8 variable: IDENTIFIER . ':' type IS statement_with_handle_error

    ':'  shift, and go to state 26


State 16

   16 body: BEGIN_ . statement_with_handle_error END ';'

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 37
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 17

    5 optional_variable: optional_variable variable .

    $default  reduce using rule 5 (optional_variable)


State 18

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 19

   12 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 47


State 20

   15 type: BOOLEAN .

    $default  reduce using rule 15 (type)


State 21

   13 type: INTEGER .

    $default  reduce using rule 13 (type)


State 22

   14 type: REAL .

    $default  reduce using rule 14 (type)


State 23

    3 function_header: FUNCTION IDENTIFIER RETURNS type . ';'

    ';'  shift, and go to state 48


State 24

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 49


State 25

    9 parameters: parameter optional_parameter .
   10 optional_parameter: optional_parameter . ',' parameter

    ','  shift, and go to state 50

    $default  reduce using rule 9 (parameters)


State 26

    8 variable: IDENTIFIER ':' . type IS statement_with_handle_error

    BOOLEAN  shift, and go to state 20
    INTEGER  shift, and go to state 21
    REAL     shift, and go to state 22

    type  go to state 51


State 27

   18 statement_with_handle_error: error .

    $default  reduce using rule 18 (statement_with_handle_error)


State 28

   51 primary: IDENTIFIER .

    $default  reduce using rule 51 (primary)


State 29

   48 primary: INT_LITERAL .

    $default  reduce using rule 48 (primary)


State 30

   49 primary: REAL_LITERAL .

    $default  reduce using rule 49 (primary)


State 31

   50 primary: BOOL_LITERAL .

    $default  reduce using rule 50 (primary)


State 32

   46 unary: NOTOP . unary

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    unary    go to state 52
    primary  go to state 46


State 33

   20 statement: REDUCE . operator reductions ENDREDUCE ';'

    ADDOP  shift, and go to state 53
    MULOP  shift, and go to state 54

    operator  go to state 55


State 34

   22 statement: CASE . expression IS case_block case_others ENDCASE ';'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    expression  go to state 56
    relation    go to state 40
    binary      go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 35

   21 statement: IF . expression THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF ';'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    expression  go to state 57
    relation    go to state 40
    binary      go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 36

   47 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    expression  go to state 58
    relation    go to state 40
    binary      go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 37

   16 body: BEGIN_ statement_with_handle_error . END ';'

    END  shift, and go to state 59


State 38

   17 statement_with_handle_error: statement .

    $default  reduce using rule 17 (statement_with_handle_error)


State 39

   19 statement: expression . ';'
   33 expression: expression . OROP binary

    OROP  shift, and go to state 60
    ';'   shift, and go to state 61


State 40

   34 relation: relation . RELOP term
   37 binary: relation .

    RELOP  shift, and go to state 62

    $default  reduce using rule 37 (binary)


State 41

   32 expression: binary .
   36 binary: binary . ANDOP relation

    ANDOP  shift, and go to state 63

    $default  reduce using rule 32 (expression)


State 42

   35 relation: term .
   38 term: term . ADDOP factor

    ADDOP  shift, and go to state 64

    $default  reduce using rule 35 (relation)


State 43

   39 term: factor .
   40 factor: factor . MULOP exponent
   41       | factor . REMOP exponent

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66

    $default  reduce using rule 39 (term)


State 44

   42 factor: exponent .

    $default  reduce using rule 42 (factor)


State 45

   43 exponent: unary .
   44         | unary . EXPOP exponent

    EXPOP  shift, and go to state 67

    $default  reduce using rule 43 (exponent)


State 46

   45 unary: primary .

    $default  reduce using rule 45 (unary)


State 47

   12 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 12 (parameter)


State 48

    3 function_header: FUNCTION IDENTIFIER RETURNS type ';' .

    $default  reduce using rule 3 (function_header)


State 49

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type . ';'

    ';'  shift, and go to state 68


State 50

   10 optional_parameter: optional_parameter ',' . parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 69


State 51

    8 variable: IDENTIFIER ':' type . IS statement_with_handle_error

    IS  shift, and go to state 70


State 52

   46 unary: NOTOP unary .

    $default  reduce using rule 46 (unary)


State 53

   28 operator: ADDOP .

    $default  reduce using rule 28 (operator)


State 54

   29 operator: MULOP .

    $default  reduce using rule 29 (operator)


State 55

   20 statement: REDUCE operator . reductions ENDREDUCE ';'

    $default  reduce using rule 31 (reductions)

    reductions  go to state 71


State 56

   22 statement: CASE expression . IS case_block case_others ENDCASE ';'
   33 expression: expression . OROP binary

    OROP  shift, and go to state 60
    IS    shift, and go to state 72


State 57

   21 statement: IF expression . THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF ';'
   33 expression: expression . OROP binary

    OROP  shift, and go to state 60
    THEN  shift, and go to state 73


State 58

   33 expression: expression . OROP binary
   47 primary: '(' expression . ')'

    OROP  shift, and go to state 60
    ')'   shift, and go to state 74


State 59

   16 body: BEGIN_ statement_with_handle_error END . ';'

    ';'  shift, and go to state 75


State 60

   33 expression: expression OROP . binary

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    relation  go to state 40
    binary    go to state 76
    term      go to state 42
    factor    go to state 43
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 61

   19 statement: expression ';' .

    $default  reduce using rule 19 (statement)


State 62

   34 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    term      go to state 77
    factor    go to state 43
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 63

   36 binary: binary ANDOP . relation

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    relation  go to state 78
    term      go to state 42
    factor    go to state 43
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 64

   38 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    factor    go to state 79
    exponent  go to state 44
    unary     go to state 45
    primary   go to state 46


State 65

   40 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    exponent  go to state 80
    unary     go to state 45
    primary   go to state 46


State 66

   41 factor: factor REMOP . exponent

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    exponent  go to state 81
    unary     go to state 45
    primary   go to state 46


State 67

   44 exponent: unary EXPOP . exponent

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    exponent  go to state 82
    unary     go to state 45
    primary   go to state 46


State 68

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 69

   10 optional_parameter: optional_parameter ',' parameter .

    $default  reduce using rule 10 (optional_parameter)


State 70

    8 variable: IDENTIFIER ':' type IS . statement_with_handle_error

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 83
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 71

   20 statement: REDUCE operator reductions . ENDREDUCE ';'
   30 reductions: reductions . statement_with_handle_error

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    ENDREDUCE     shift, and go to state 84
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 85
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 72

   22 statement: CASE expression IS . case_block case_others ENDCASE ';'

    error  shift, and go to state 86
    WHEN   shift, and go to state 87

    case_block  go to state 88
    case_when   go to state 89


State 73

   21 statement: IF expression THEN . statement_with_handle_error ELSE statement_with_handle_error ENDIF ';'

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 90
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 74

   47 primary: '(' expression ')' .

    $default  reduce using rule 47 (primary)


State 75

   16 body: BEGIN_ statement_with_handle_error END ';' .

    $default  reduce using rule 16 (body)


State 76

   33 expression: expression OROP binary .
   36 binary: binary . ANDOP relation

    ANDOP  shift, and go to state 63

    $default  reduce using rule 33 (expression)


State 77

   34 relation: relation RELOP term .
   38 term: term . ADDOP factor

    ADDOP  shift, and go to state 64

    $default  reduce using rule 34 (relation)


State 78

   34 relation: relation . RELOP term
   36 binary: binary ANDOP relation .

    RELOP  shift, and go to state 62

    $default  reduce using rule 36 (binary)


State 79

   38 term: term ADDOP factor .
   40 factor: factor . MULOP exponent
   41       | factor . REMOP exponent

    MULOP  shift, and go to state 65
    REMOP  shift, and go to state 66

    $default  reduce using rule 38 (term)


State 80

   40 factor: factor MULOP exponent .

    $default  reduce using rule 40 (factor)


State 81

   41 factor: factor REMOP exponent .

    $default  reduce using rule 41 (factor)


State 82

   44 exponent: unary EXPOP exponent .

    $default  reduce using rule 44 (exponent)


State 83

    8 variable: IDENTIFIER ':' type IS statement_with_handle_error .

    $default  reduce using rule 8 (variable)


State 84

   20 statement: REDUCE operator reductions ENDREDUCE . ';'

    ';'  shift, and go to state 91


State 85

   30 reductions: reductions statement_with_handle_error .

    $default  reduce using rule 30 (reductions)


State 86

   25 case_block: error .

    $default  reduce using rule 25 (case_block)


State 87

   26 case_when: WHEN . INT_LITERAL ARROW statement

    INT_LITERAL  shift, and go to state 92


State 88

   22 statement: CASE expression IS case_block . case_others ENDCASE ';'
   23 case_block: case_block . case_when

    WHEN    shift, and go to state 87
    OTHERS  shift, and go to state 93

    case_when    go to state 94
    case_others  go to state 95


State 89

   24 case_block: case_when .

    $default  reduce using rule 24 (case_block)


State 90

   21 statement: IF expression THEN statement_with_handle_error . ELSE statement_with_handle_error ENDIF ';'

    ELSE  shift, and go to state 96


State 91

   20 statement: REDUCE operator reductions ENDREDUCE ';' .

    $default  reduce using rule 20 (statement)


State 92

   26 case_when: WHEN INT_LITERAL . ARROW statement

    ARROW  shift, and go to state 97


State 93

   27 case_others: OTHERS . ARROW expression ';'

    ARROW  shift, and go to state 98


State 94

   23 case_block: case_block case_when .

    $default  reduce using rule 23 (case_block)


State 95

   22 statement: CASE expression IS case_block case_others . ENDCASE ';'

    ENDCASE  shift, and go to state 99


State 96

   21 statement: IF expression THEN statement_with_handle_error ELSE . statement_with_handle_error ENDIF ';'

    error         shift, and go to state 27
    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement_with_handle_error  go to state 100
    statement                    go to state 38
    expression                   go to state 39
    relation                     go to state 40
    binary                       go to state 41
    term                         go to state 42
    factor                       go to state 43
    exponent                     go to state 44
    unary                        go to state 45
    primary                      go to state 46


State 97

   26 case_when: WHEN INT_LITERAL ARROW . statement

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    REDUCE        shift, and go to state 33
    CASE          shift, and go to state 34
    IF            shift, and go to state 35
    '('           shift, and go to state 36

    statement   go to state 101
    expression  go to state 39
    relation    go to state 40
    binary      go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 98

   27 case_others: OTHERS ARROW . expression ';'

    IDENTIFIER    shift, and go to state 28
    INT_LITERAL   shift, and go to state 29
    REAL_LITERAL  shift, and go to state 30
    BOOL_LITERAL  shift, and go to state 31
    NOTOP         shift, and go to state 32
    '('           shift, and go to state 36

    expression  go to state 102
    relation    go to state 40
    binary      go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    primary     go to state 46


State 99

   22 statement: CASE expression IS case_block case_others ENDCASE . ';'

    ';'  shift, and go to state 103


State 100

   21 statement: IF expression THEN statement_with_handle_error ELSE statement_with_handle_error . ENDIF ';'

    ENDIF  shift, and go to state 104


State 101

   26 case_when: WHEN INT_LITERAL ARROW statement .

    $default  reduce using rule 26 (case_when)


State 102

   27 case_others: OTHERS ARROW expression . ';'
   33 expression: expression . OROP binary

    OROP  shift, and go to state 60
    ';'   shift, and go to state 105


State 103

   22 statement: CASE expression IS case_block case_others ENDCASE ';' .

    $default  reduce using rule 22 (statement)


State 104

   21 statement: IF expression THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF . ';'

    ';'  shift, and go to state 106


State 105

   27 case_others: OTHERS ARROW expression ';' .

    $default  reduce using rule 27 (case_others)


State 106

   21 statement: IF expression THEN statement_with_handle_error ELSE statement_with_handle_error ENDIF ';' .

    $default  reduce using rule 21 (statement)
