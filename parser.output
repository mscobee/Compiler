Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 optional_variable: variable
    4                  | %empty

    5 variable: IDENTIFIER ':' type IS statement_

    6 type: INTEGER
    7     | BOOLEAN
    8     | REAL

    9 body: BEGIN_ statement_ END ';'

   10 statement_: statement ';'
   11           | error ';'

   12 statement: expression
   13          | REDUCE operator reductions ENDREDUCE

   14 operator: ADDOP
   15         | MULOP

   16 reductions: reductions statement_
   17           | %empty

   18 expression: expression ANDOP relation
   19           | relation

   20 relation: relation RELOP term
   21         | term

   22 term: term ADDOP factor
   23     | factor

   24 factor: factor MULOP primary
   25       | primary

   26 primary: '(' expression ')'
   27        | INT_LITERAL
   28        | REAL_LITERAL
   29        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 26
    ')' (41) 26
    ':' (58) 5
    ';' (59) 2 9 10 11
    error (256) 11
    IDENTIFIER <iden> (258) 2 5 29
    INT_LITERAL <type> (259) 27
    REAL_LITERAL <type> (260) 28
    ADDOP (261) 14 22
    MULOP (262) 15 24
    RELOP (263) 20
    ANDOP (264) 18
    BEGIN_ (265) 9
    BOOLEAN (266) 7
    END (267) 9
    ENDREDUCE (268) 13
    FUNCTION (269) 2
    INTEGER (270) 6
    IS (271) 5
    REDUCE (272) 13
    RETURNS (273) 2
    REAL (274) 8


Nonterminals, with rules where they appear

    $accept (24)
        on left: 0
    function (25)
        on left: 1
        on right: 0
    function_header (26)
        on left: 2
        on right: 1
    optional_variable (27)
        on left: 3 4
        on right: 1
    variable (28)
        on left: 5
        on right: 3
    type <type> (29)
        on left: 6 7 8
        on right: 2 5
    body (30)
        on left: 9
        on right: 1
    statement_ <type> (31)
        on left: 10 11
        on right: 5 9 16
    statement <type> (32)
        on left: 12 13
        on right: 10
    operator (33)
        on left: 14 15
        on right: 13
    reductions <type> (34)
        on left: 16 17
        on right: 13 16
    expression <type> (35)
        on left: 18 19
        on right: 12 18 26
    relation <type> (36)
        on left: 20 21
        on right: 18 19 20
    term <type> (37)
        on left: 22 23
        on right: 20 21 22
    factor <type> (38)
        on left: 24 25
        on right: 22 23 24
    primary <type> (39)
        on left: 26 27 28 29
        on right: 24 25


State 0

    0 $accept: . function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION . IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function . $end

    $end  shift, and go to state 5


State 3

    1 function: function_header . optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER . RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end .

    $default  accept


State 6

    5 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable . body

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    3 optional_variable: variable .

    $default  reduce using rule 3 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS . type ';'

    BOOLEAN  shift, and go to state 13
    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15

    type  go to state 16


State 10

    5 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 13
    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15

    type  go to state 17


State 11

    9 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    REDUCE        shift, and go to state 22
    '('           shift, and go to state 23

    statement_  go to state 24
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 12

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 13

    7 type: BOOLEAN .

    $default  reduce using rule 7 (type)


State 14

    6 type: INTEGER .

    $default  reduce using rule 6 (type)


State 15

    8 type: REAL .

    $default  reduce using rule 8 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type . ';'

    ';'  shift, and go to state 31


State 17

    5 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 32


State 18

   11 statement_: error . ';'

    ';'  shift, and go to state 33


State 19

   29 primary: IDENTIFIER .

    $default  reduce using rule 29 (primary)


State 20

   27 primary: INT_LITERAL .

    $default  reduce using rule 27 (primary)


State 21

   28 primary: REAL_LITERAL .

    $default  reduce using rule 28 (primary)


State 22

   13 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 34
    MULOP  shift, and go to state 35

    operator  go to state 36


State 23

   26 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    '('           shift, and go to state 23

    expression  go to state 37
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 24

    9 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 38


State 25

   10 statement_: statement . ';'

    ';'  shift, and go to state 39


State 26

   12 statement: expression .
   18 expression: expression . ANDOP relation

    ANDOP  shift, and go to state 40

    $default  reduce using rule 12 (statement)


State 27

   19 expression: relation .
   20 relation: relation . RELOP term

    RELOP  shift, and go to state 41

    $default  reduce using rule 19 (expression)


State 28

   21 relation: term .
   22 term: term . ADDOP factor

    ADDOP  shift, and go to state 42

    $default  reduce using rule 21 (relation)


State 29

   23 term: factor .
   24 factor: factor . MULOP primary

    MULOP  shift, and go to state 43

    $default  reduce using rule 23 (term)


State 30

   25 factor: primary .

    $default  reduce using rule 25 (factor)


State 31

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 32

    5 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    REDUCE        shift, and go to state 22
    '('           shift, and go to state 23

    statement_  go to state 44
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 33

   11 statement_: error ';' .

    $default  reduce using rule 11 (statement_)


State 34

   14 operator: ADDOP .

    $default  reduce using rule 14 (operator)


State 35

   15 operator: MULOP .

    $default  reduce using rule 15 (operator)


State 36

   13 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 17 (reductions)

    reductions  go to state 45


State 37

   18 expression: expression . ANDOP relation
   26 primary: '(' expression . ')'

    ANDOP  shift, and go to state 40
    ')'    shift, and go to state 46


State 38

    9 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 47


State 39

   10 statement_: statement ';' .

    $default  reduce using rule 10 (statement_)


State 40

   18 expression: expression ANDOP . relation

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    '('           shift, and go to state 23

    relation  go to state 48
    term      go to state 28
    factor    go to state 29
    primary   go to state 30


State 41

   20 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    '('           shift, and go to state 23

    term     go to state 49
    factor   go to state 29
    primary  go to state 30


State 42

   22 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    '('           shift, and go to state 23

    factor   go to state 50
    primary  go to state 30


State 43

   24 factor: factor MULOP . primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    '('           shift, and go to state 23

    primary  go to state 51


State 44

    5 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 5 (variable)


State 45

   13 statement: REDUCE operator reductions . ENDREDUCE
   16 reductions: reductions . statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    ENDREDUCE     shift, and go to state 52
    REDUCE        shift, and go to state 22
    '('           shift, and go to state 23

    statement_  go to state 53
    statement   go to state 25
    expression  go to state 26
    relation    go to state 27
    term        go to state 28
    factor      go to state 29
    primary     go to state 30


State 46

   26 primary: '(' expression ')' .

    $default  reduce using rule 26 (primary)


State 47

    9 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 9 (body)


State 48

   18 expression: expression ANDOP relation .
   20 relation: relation . RELOP term

    RELOP  shift, and go to state 41

    $default  reduce using rule 18 (expression)


State 49

   20 relation: relation RELOP term .
   22 term: term . ADDOP factor

    ADDOP  shift, and go to state 42

    $default  reduce using rule 20 (relation)


State 50

   22 term: term ADDOP factor .
   24 factor: factor . MULOP primary

    MULOP  shift, and go to state 43

    $default  reduce using rule 22 (term)


State 51

   24 factor: factor MULOP primary .

    $default  reduce using rule 24 (factor)


State 52

   13 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 13 (statement)


State 53

   16 reductions: reductions statement_ .

    $default  reduce using rule 16 (reductions)
